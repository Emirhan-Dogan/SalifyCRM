CREATE TABLE users (
    id SERIAL PRIMARY KEY,
    first_name VARCHAR(255) NOT NULL,
    last_name VARCHAR(255) NOT NULL,
    citizen_id VARCHAR(20) NOT NULL UNIQUE,
    phone_number VARCHAR(20) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password_salt VARCHAR(255) NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    last_login_date TIMESTAMP,
    gender VARCHAR(10),
    birth_date DATE,
    profile_image TEXT,
    notes TEXT,
    is_deleted BOOLEAN DEFAULT FALSE,
    created_user_id INT NOT NULL,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status BOOLEAN,
    last_updated_user_id INT,
    last_updated_date TIMESTAMP
);

CREATE TABLE operation_claims (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    is_deleted BOOLEAN DEFAULT FALSE
);

CREATE TABLE user_operation_claims (
    id SERIAL PRIMARY KEY,
    user_id INT NOT NULL,
    operation_claim_id INT NOT NULL,
    is_deleted BOOLEAN DEFAULT FALSE,
    created_user_id INT NOT NULL,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(50),
    last_updated_user_id INT,
    last_updated_date TIMESTAMP,
    CONSTRAINT fk_user FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_operation_claim FOREIGN KEY(operation_claim_id) REFERENCES operation_claims(id) ON DELETE CASCADE
);

CREATE TABLE groups (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    is_deleted BOOLEAN DEFAULT FALSE,
    created_user_id INT NOT NULL,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(50),
    last_updated_user_id INT,
    last_updated_date TIMESTAMP
);

CREATE TABLE group_claims (
    id SERIAL PRIMARY KEY,
    operation_claim_id INT NOT NULL,
    group_id INT NOT NULL,
    is_deleted BOOLEAN DEFAULT FALSE,
    created_user_id INT NOT NULL,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(50),
    last_updated_user_id INT,
    last_updated_date TIMESTAMP,
    CONSTRAINT fk_operation_claim FOREIGN KEY(operation_claim_id) REFERENCES operation_claims(id) ON DELETE CASCADE,
    CONSTRAINT fk_group FOREIGN KEY(group_id) REFERENCES groups(id) ON DELETE CASCADE
);

CREATE TABLE user_groups (
    id SERIAL PRIMARY KEY,
    user_id INT NOT NULL,
    group_id INT NOT NULL,
    is_deleted BOOLEAN DEFAULT FALSE,
    created_user_id INT NOT NULL,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(50),
    last_updated_user_id INT,
    last_updated_date TIMESTAMP,
    CONSTRAINT fk_user FOREIGN KEY(user_id) REFERENCES users(id) ON DELETE CASCADE,
    CONSTRAINT fk_group FOREIGN KEY(group_id) REFERENCES groups(id) ON DELETE CASCADE
);


-- Customer Management

create table customer_types(
id SERIAL primary key,
name VARCHAR(50) not null,
descriptions varchar(300) null,
is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP
);


create table customer_tags(
id SERIAL primary key,
name VARCHAR(50) not null,
descriptions varchar(300) null,
is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP
);

create table occupations(
id SERIAL primary key,
name VARCHAR(50) not null,
descriptions varchar(300) null,
is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP
);

create table martial_statuses(
id SERIAL primary key,
name VARCHAR(50) not null,
descriptions varchar(300) null,
is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP
);

create table countries(
id serial primary key,
name varchar(50) not null,
is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP
);

create table cities(
id serial primary key,
name varchar(50) not null,
country_id int not null,

is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP,

constraint fk_country foreign key(country_id) references countries(id) on delete cascade
);

create table districts(
id serial primary key,
name varchar(50) not null,
city_id int not null,

is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP,

constraint fk_city foreign key(city_id) references cities(id) on delete cascade
);

create table address_types(
id serial primary key,
name varchar(50) not null,
descriptions varchar(300) null,

is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP
);

create table addresses(
id serial primary key,
name varchar(50) not null,
details varchar(500) null,

address_type_id int not null,
country_id int not null,
city_id int not null,
district_id int not null,

is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP,

constraint fk_address_type foreign key(address_type_id) references address_types(id) on delete cascade,
constraint fk_country foreign key(country_id) references countries(id) on delete cascade,
constraint fk_cities foreign key(city_id) references cities(id) on delete cascade,
constraint fk_district foreign key(district_id) references districts(id) on delete cascade
);

create table customers(
id serial primary key,
customer_code varchar(15) not null,
first_name varchar(50) not null,
last_name varchar(50) not null,
email varchar(100) not null,
phone_number varchar(15),
birth_date timestamp,
gender boolean,
income_level int,
last_login_date timestamp default null,
last_interaction_date timestamp default null,

customer_type_id int not null,
occupation_id int,
martial_status_id int,
customer_category_id int not null,

is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP,

constraint fk_customer_type foreign key(customer_type_id) references customer_types(id) on delete cascade,
constraint fk_occupation foreign key(occupation_id) references occupations(id) on delete cascade,
constraint fk_martial_status foreign key(martial_status_id) references martial_statuses(id) on delete cascade,
constraint fk_customer_category foreign key(customer_category_id) references customer_category(id) on delete cascade
);

create table customer_notes(
id serial primary key,
note varchar(300) not null,
note_date timestamp default CURRENT_TIMESTAMP,
customer_id int not null,

is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP,

constraint fk_customer foreign key(customer_id) references customers(id) on delete cascade
);

create table customer_tag_mappings(
id serial primary key,
customer_id int not null,
customer_tag_id int not null,

is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP,

constraint fk_customer foreign key(customer_id) references customers(id) on delete cascade,
constraint fk_customer_tag foreign key(customer_tag_id) references customer_tags(id) on delete cascade
);

create  table customer_addresses(
id serial primary key,
customer_id int not null,
address_id int not null,

is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP,

constraint fk_customer foreign key(customer_id) references customers(id) on delete cascade,
constraint fk_address foreign key(address_id) references addresses(id) on delete cascade
);

create table permissions(
id serial primary key,
name varchar(50) not null,
document_path varchar(500) not null,
descriptions varchar(500),

is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP
);
create table social_medias(
id serial primary key,
name varchar(50) not null,
icon varchar(500) not null,

is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP
);
create table customer_permissions(
id serial primary key,
customer_id int not null,
permission_id int not null,

is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP,
constraint fk_customer foreign key(customer_id) references customers(id) on delete cascade,
constraint fk_permission foreign key(permission_id) references permissions(id) on delete cascade
);

create table customer_socials(
id serial primary key,
customer_id int not null,
social_media_id int not null,
social_media_link varchar(500) not null,

is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP,

constraint fk_customer foreign key(customer_id) references customers(id) on delete cascade,
constraint fk_social_medias foreign key(social_media_id) references social_medias(id) on delete cascade
);

create table customer_categories(
id serial primary key,
name varchar(70) not null,
descriptions varchar(300),
is_deleted BOOLEAN DEFAULT FALSE,
created_user_id INT NOT NULL,
created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
status VARCHAR(50),
last_updated_user_id INT,
last_updated_date TIMESTAMP
);


-- Create Admin User
INSERT INTO public.users
( first_name, last_name, citizen_id, phone_number, email, password_salt, password_hash, last_login_date, gender, birth_date, profile_image, notes, is_deleted, created_user_id, created_date, status, last_updated_user_id, last_updated_date)
VALUES('Admin', 'Administrator', '', '00', 'emirhandoganresmi@gmail.com', '4jBGAN9DUd5Sf9Y08T1j/5wNM+e2CvxARfcq6zDgvsiemwYHTh6QIg/Qf31cscBS8ajLXmVbdPjFAtxCG6Lf+Q==', 'VVUn7A6IQKMtzqz3pQa4ExKD9+93Z2Y++015sPRckcE=', CURRENT_TIMESTAMP, 'E', CURRENT_TIMESTAMP, '', '', false, 0, CURRENT_TIMESTAMP, true, 0, CURRENT_TIMESTAMP);



